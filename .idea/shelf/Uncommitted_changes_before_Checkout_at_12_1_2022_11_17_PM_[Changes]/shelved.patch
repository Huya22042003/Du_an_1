Index: src/main/resources/META-INF/hibernate.cfg.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version='1.0' encoding='utf-8'?>\r\n<!DOCTYPE hibernate-configuration PUBLIC\r\n      \"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\r\n      \"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd\">\r\n\r\n<hibernate-configuration>\r\n    <session-factory>\r\n        <!-- Database connection settings -->\r\n        <property name=\"connection.driver_class\">\r\n            com.microsoft.sqlserver.jdbc.SQLServerDriver\r\n        </property>\r\n        <property name=\"connection.url\">\r\n            jdbc:sqlserver://localhost:1433;databaseName=DU_AN_MOT;encrypt=true;trustServerCertificate=true;\r\n        </property>\r\n\r\n        <property name=\"connection.username\">sa</property>\r\n        <property name=\"connection.password\">123</property>\r\n\r\n        <!-- JDBC connection pool (use the built-in) -->\r\n        <property name=\"connection.pool_size\">1</property>\r\n\r\n        <!-- SQL dialect -->\r\n        <property name=\"dialect\">org.hibernate.dialect.SQLServerDialect</property>\r\n\r\n        <!-- Enable Hibernate's automatic session context management -->\r\n        <property name=\"current_session_context_class\">thread</property>\r\n\r\n        <!-- Disable the second-level cache -->\r\n        <property name=\"cache.provider_class\">org.hibernate.cache.internal.NoCacheProvider</property>\r\n\r\n        <!-- Echo all executed SQL to stdout -->\r\n        <property name=\"show_sql\">true</property>\r\n       \r\n        <mapping class = \"domainModels.ChucVu\"/>\r\n        <mapping class = \"domainModels.NhanVien\"/>\r\n        <mapping class = \"domainModels.KhachHang\"/>\r\n        <mapping class = \"domainModels.NhaCungCap\"/>\r\n        <mapping class = \"domainModels.SanPham\"/>\r\n        <mapping class = \"domainModels.DonVi\"/>\r\n        <mapping class = \"domainModels.PhieuNhap\"/>\r\n        <mapping class = \"domainModels.PhieuXuat\"/>\r\n        <mapping class = \"domainModels.PhieuKiemKe\"/>\r\n        <mapping class = \"domainModels.PhieuHoanXuat\"/>\r\n        <mapping class = \"domainModels.PhieuHoanNhap\"/>\r\n        <mapping class = \"domainModels.ChiTietSanPham\"/>\r\n        <mapping class = \"domainModels.ChiTietPhieuNhap\"/>\r\n        <mapping class = \"domainModels.ChiTietPhieuXuat\"/>\r\n        <mapping class = \"domainModels.ChiTietPhieuKiemKe\"/>\r\n        <mapping class = \"domainModels.ChiTietPhieuHoanXuat\"/>\r\n        <mapping class = \"domainModels.ChiTietPhieuHoanNhap\"/>\r\n        \r\n    </session-factory>\r\n</hibernate-configuration>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/META-INF/hibernate.cfg.xml b/src/main/resources/META-INF/hibernate.cfg.xml
--- a/src/main/resources/META-INF/hibernate.cfg.xml	(revision 8e9c44ad9c0bd7b1f6d4be230480a84938657864)
+++ b/src/main/resources/META-INF/hibernate.cfg.xml	(date 1669911046434)
@@ -14,7 +14,7 @@
         </property>
 
         <property name="connection.username">sa</property>
-        <property name="connection.password">123</property>
+        <property name="connection.password">123456</property>
 
         <!-- JDBC connection pool (use the built-in) -->
         <property name="connection.pool_size">1</property>
Index: src/main/java/views/main/LoginView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package views.main;\r\n\r\nimport cores.logins.custom.NhanVienCustom;\r\nimport cores.logins.service.ServiceImpl.UserServiceImpl;\r\nimport cores.logins.service.UserService;\r\nimport cores.truongPhongs.views.TestAll;\r\nimport java.util.concurrent.ConcurrentHashMap;\r\nimport javax.swing.JOptionPane;\r\nimport utilities.Auth;\r\n\r\n/**\r\n *\r\n * @author QUOC HUY\r\n */\r\npublic class LoginView extends javax.swing.JFrame {\r\n\r\n    /**\r\n     * Creates new form Login\r\n     */\r\n    private UserService service;\r\n\r\n    private ConcurrentHashMap<String, NhanVienCustom> map;\r\n\r\n    public LoginView() {\r\n        service = new UserServiceImpl();\r\n        map = new ConcurrentHashMap<>();\r\n        initComponents();\r\n        setLocationRelativeTo(null);\r\n        txtEmail.setOpaque(false);\r\n        txtPassWord.setOpaque(false);\r\n        btnLogin.setOpaque(false);\r\n        btnForgot.setOpaque(false);\r\n        map = service.mapUserKeyEmail();\r\n        System.out.println(map.containsKey(\"a\"));\r\n        Auth.clear();\r\n    }\r\n\r\n    /**\r\n     * This method is called from within the constructor to initialize the form.\r\n     * WARNING: Do NOT modify this code. The content of this method is always\r\n     * regenerated by the Form Editor.\r\n     */\r\n    @SuppressWarnings(\"unchecked\")\r\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\r\n    private void initComponents() {\r\n\r\n        jPanel1 = new javax.swing.JPanel();\r\n        jLabel2 = new javax.swing.JLabel();\r\n        txtEmail = new javax.swing.JTextField();\r\n        txtPassWord = new javax.swing.JTextField();\r\n        jLabel4 = new javax.swing.JLabel();\r\n        btnLogin = new utilities.palette.UWPButton();\r\n        jCheckBoxCustom1 = new utilities.palette.JCheckBoxCustom();\r\n        btnForgot = new javax.swing.JButton();\r\n        jLabel3 = new javax.swing.JLabel();\r\n        jLabel1 = new javax.swing.JLabel();\r\n\r\n        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);\r\n        setUndecorated(true);\r\n        getContentPane().setLayout(new java.awt.CardLayout());\r\n\r\n        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());\r\n\r\n        jLabel2.setFont(new java.awt.Font(\"Segoe UI\", 0, 18)); // NOI18N\r\n        jLabel2.setForeground(new java.awt.Color(255, 255, 255));\r\n        jLabel2.setText(\"WELCOME\");\r\n        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 470, 100, 30));\r\n\r\n        txtEmail.setBackground(new java.awt.Color(242, 242, 242));\r\n        txtEmail.setFont(new java.awt.Font(\"Segoe UI\", 0, 16)); // NOI18N\r\n        txtEmail.setForeground(new java.awt.Color(255, 255, 255));\r\n        txtEmail.setToolTipText(\"Nhập email\");\r\n        txtEmail.setAutoscrolls(false);\r\n        txtEmail.setBorder(null);\r\n        txtEmail.setVerifyInputWhenFocusTarget(false);\r\n        jPanel1.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 170, 270, 40));\r\n\r\n        txtPassWord.setFont(new java.awt.Font(\"Segoe UI\", 0, 16)); // NOI18N\r\n        txtPassWord.setForeground(new java.awt.Color(255, 255, 255));\r\n        txtPassWord.setToolTipText(\"Nhập password\");\r\n        txtPassWord.setAutoscrolls(false);\r\n        txtPassWord.setBorder(null);\r\n        txtPassWord.setVerifyInputWhenFocusTarget(false);\r\n        jPanel1.add(txtPassWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 280, 270, 40));\r\n\r\n        jLabel4.setFont(new java.awt.Font(\"Segoe UI\", 0, 18)); // NOI18N\r\n        jLabel4.setForeground(new java.awt.Color(255, 255, 255));\r\n        jLabel4.setText(\"PassWord :\");\r\n        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 240, 170, 30));\r\n\r\n        btnLogin.setBackground(new java.awt.Color(0, 0, 0));\r\n        btnLogin.setBorder(null);\r\n        btnLogin.setText(\"LOGIN\");\r\n        btnLogin.setFont(new java.awt.Font(\"Segoe UI\", 1, 18)); // NOI18N\r\n        btnLogin.setOpaque(true);\r\n        btnLogin.setSelectedColor(new java.awt.Color(255, 255, 255));\r\n        btnLogin.addActionListener(new java.awt.event.ActionListener() {\r\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\r\n                btnLoginActionPerformed(evt);\r\n            }\r\n        });\r\n        jPanel1.add(btnLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 400, 200, 50));\r\n        btnLogin.getAccessibleContext().setAccessibleName(\"LOGIN\");\r\n\r\n        jCheckBoxCustom1.setBackground(new java.awt.Color(0, 0, 0));\r\n        jCheckBoxCustom1.setForeground(new java.awt.Color(255, 255, 255));\r\n        jCheckBoxCustom1.setText(\"Remember me ?\");\r\n        jCheckBoxCustom1.setFont(new java.awt.Font(\"Segoe UI\", 0, 14)); // NOI18N\r\n        jPanel1.add(jCheckBoxCustom1, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 350, -1, -1));\r\n\r\n        btnForgot.setFont(new java.awt.Font(\"Segoe UI\", 0, 14)); // NOI18N\r\n        btnForgot.setForeground(new java.awt.Color(255, 255, 255));\r\n        btnForgot.setText(\"Forgot Password ?\");\r\n        btnForgot.setBorder(null);\r\n        btnForgot.setOpaque(true);\r\n        jPanel1.add(btnForgot, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 350, 140, -1));\r\n\r\n        jLabel3.setFont(new java.awt.Font(\"Segoe UI\", 0, 18)); // NOI18N\r\n        jLabel3.setForeground(new java.awt.Color(255, 255, 255));\r\n        jLabel3.setText(\"Email:\");\r\n        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 131, 170, -1));\r\n\r\n        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/icons/loginForm.png\"))); // NOI18N\r\n        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1080, 710));\r\n        jLabel1.getAccessibleContext().setAccessibleParent(jLabel3);\r\n\r\n        getContentPane().add(jPanel1, \"card2\");\r\n\r\n        pack();\r\n    }// </editor-fold>//GEN-END:initComponents\r\n\r\n    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed\r\n        String email = this.txtEmail.getText();\r\n        if (map.containsKey(email)) {\r\n            if (map.get(email).getMatKhau().equals(txtPassWord.getText())) {\r\n//                Auth.nhanVien = map.get(email);\r\n//                Bot bot = new Bot();\r\n//                bot.setVisible(true);\r\n                // check chức vụ\r\n                if (Auth.nhanVien.getChucVu().getMa().equalsIgnoreCase(\"CV0001\")) {\r\n                    JOptionPane.showMessageDialog(this, \"Thành công\", \"Welcome\", JOptionPane.PLAIN_MESSAGE);\r\n                    this.setVisible(false);\r\n                    try {\r\n                        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {\r\n                            if (\"Nimbus\".equals(info.getName())) {\r\n                                javax.swing.UIManager.setLookAndFeel(info.getClassName());\r\n                                break;\r\n                            }\r\n                            \r\n                        }\r\n                    } catch (ClassNotFoundException ex) {\r\n                        java.util.logging.Logger.getLogger(TruongPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\r\n                    } catch (InstantiationException ex) {\r\n                        java.util.logging.Logger.getLogger(TruongPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\r\n                    } catch (IllegalAccessException ex) {\r\n                        java.util.logging.Logger.getLogger(TruongPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\r\n                    } catch (javax.swing.UnsupportedLookAndFeelException ex) {\r\n                        java.util.logging.Logger.getLogger(TruongPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\r\n                    }\r\n                    //</editor-fold>\r\n\r\n                    /* Create and display the form */\r\n                    java.awt.EventQueue.invokeLater(new Runnable() {\r\n                        @Override\r\n                        public void run() {\r\n                            new TestAll().setVisible(true);\r\n                        }\r\n                    });\r\n                    \r\n                } else if (Auth.nhanVien.getChucVu().getMa().equalsIgnoreCase(\"CV0002\")) {\r\n                    this.setVisible(false);\r\n                    JOptionPane.showMessageDialog(this, \"Thành công\", \"Welcome\", JOptionPane.PLAIN_MESSAGE);\r\n                    try {\r\n                        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {\r\n                            if (\"Nimbus\".equals(info.getName())) {\r\n                                javax.swing.UIManager.setLookAndFeel(info.getClassName());\r\n                                break;\r\n                            }\r\n                        }\r\n                    } catch (ClassNotFoundException ex) {\r\n                        java.util.logging.Logger.getLogger(NhanVienQuanLy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\r\n                    } catch (InstantiationException ex) {\r\n                        java.util.logging.Logger.getLogger(NhanVienQuanLy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\r\n                    } catch (IllegalAccessException ex) {\r\n                        java.util.logging.Logger.getLogger(NhanVienQuanLy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\r\n                    } catch (javax.swing.UnsupportedLookAndFeelException ex) {\r\n                        java.util.logging.Logger.getLogger(NhanVienQuanLy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\r\n                    }\r\n                    //</editor-fold>\r\n\r\n                    /* Create and display the form */\r\n                    java.awt.EventQueue.invokeLater(new Runnable() {\r\n                        @Override\r\n                        public void run() {\r\n                            new NhanVienQuanLy().setVisible(true);\r\n                        }\r\n                    });\r\n\r\n                } else {\r\n                    JOptionPane.showMessageDialog(this, \"Tài khoản không có quyền truy cập\", \"ERROR !!!\", JOptionPane.ERROR_MESSAGE);\r\n                }\r\n\r\n            } else {\r\n                JOptionPane.showMessageDialog(this, \"Mật khẩu không chính sác\", \"ERROR !!!\", JOptionPane.ERROR_MESSAGE);\r\n            }\r\n        } else {\r\n            JOptionPane.showMessageDialog(this, \"Tài khoản không có trong bộ nhớ\", \"ERROR !!!\", JOptionPane.ERROR_MESSAGE);\r\n        }\r\n    }//GEN-LAST:event_btnLoginActionPerformed\r\n\r\n    /**\r\n     * @param args the command line arguments\r\n     */\r\n    public static void main(String args[]) {\r\n        /* Set the Nimbus look and feel */\r\n        //<editor-fold defaultstate=\"collapsed\" desc=\" Look and feel setting code (optional) \">\r\n        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.\r\n         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html \r\n         */\r\n        try {\r\n            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {\r\n                if (\"Windows\".equals(info.getName())) {\r\n                    javax.swing.UIManager.setLookAndFeel(info.getClassName());\r\n                    break;\r\n                }\r\n            }\r\n        } catch (ClassNotFoundException ex) {\r\n            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\r\n        } catch (InstantiationException ex) {\r\n            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\r\n        } catch (IllegalAccessException ex) {\r\n            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\r\n        } catch (javax.swing.UnsupportedLookAndFeelException ex) {\r\n            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\r\n        }\r\n        //</editor-fold>\r\n        //</editor-fold>\r\n\r\n        /* Create and display the form */\r\n        java.awt.EventQueue.invokeLater(new Runnable() {\r\n            public void run() {\r\n                new LoginView().setVisible(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Variables declaration - do not modify//GEN-BEGIN:variables\r\n    private javax.swing.JButton btnForgot;\r\n    private utilities.palette.UWPButton btnLogin;\r\n    private utilities.palette.JCheckBoxCustom jCheckBoxCustom1;\r\n    private javax.swing.JLabel jLabel1;\r\n    private javax.swing.JLabel jLabel2;\r\n    private javax.swing.JLabel jLabel3;\r\n    private javax.swing.JLabel jLabel4;\r\n    private javax.swing.JPanel jPanel1;\r\n    private javax.swing.JTextField txtEmail;\r\n    private javax.swing.JTextField txtPassWord;\r\n    // End of variables declaration//GEN-END:variables\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/views/main/LoginView.java b/src/main/java/views/main/LoginView.java
--- a/src/main/java/views/main/LoginView.java	(revision 8e9c44ad9c0bd7b1f6d4be230480a84938657864)
+++ b/src/main/java/views/main/LoginView.java	(date 1669911142773)
@@ -133,9 +133,9 @@
         String email = this.txtEmail.getText();
         if (map.containsKey(email)) {
             if (map.get(email).getMatKhau().equals(txtPassWord.getText())) {
-//                Auth.nhanVien = map.get(email);
-//                Bot bot = new Bot();
-//                bot.setVisible(true);
+                Auth.nhanVien = map.get(email);
+                Bot bot = new Bot();
+                bot.setVisible(true);
                 // check chức vụ
                 if (Auth.nhanVien.getChucVu().getMa().equalsIgnoreCase("CV0001")) {
                     JOptionPane.showMessageDialog(this, "Thành công", "Welcome", JOptionPane.PLAIN_MESSAGE);
